server:
  port: 8081


spring:
  config:
    import:
      - 'classpath:/conf/gitee.properties'
      - 'classpath:/conf/pay.properties'
  # H2
  datasource:
    url: jdbc:h2:mem:design
    driver-class-name: org.h2.Driver
    username: design
    password: design
    schema: 'classpath:/schema.sql'
    data: 'classpath:/data.sql'
  h2:
    console:
      enabled: true
      path: /my-h2

  # JPA
  jpa:
    properties:
      hibernate:
        # auto update
        hbm2ddl:
          auto: update
      # config MySQL5 InnoDB Dialect
      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true

  # Redis
  redis:
    host: 127.0.0.1
    port: 6379
    database: 3

  # RabbitMQ
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# Apollo
app:
  id: DesignPatternLearning
apollo:
  meta: http://127.0.0.1:8080
  bootstrap:
    enable: true
    eagerLoad:
      enable: true
  cacheDir: /Users/codejuzi/program/Apollo/apollo-quick-start-2.1.0/cache/apollo-cache
logging:
  level:
    com: info

# 第三方登录相关配置
gitee:
  client-id: ${third_party.gitee.client_id}
  client-secret: ${third_party.gitee.client_secret}
  callback: ${third_party.gitee.callback}
  state: ${third_party.gitee.state}
  user:
    prefix: ${gitee.state}@
    url: https://gitee.com/api/v5/user?access_token=%s
  token-url: https://gitee.com/oauth/token?grant_type=authorization_code&client_id=${gitee.client-id}&client_secret=${gitee.client-secret}&redirect_uri=${gitee.callback}&code=%s

alipay:
  app-id: ${third_party.alipay.app_id}
  app-private-key: ${third_party.alipay.app_private_key}
  alipay-public-key: ${third_party.alipay.alipay_public_key}
  gateway-url: ${third_party.alipay.alipay_gateway_url}
  callback-url: ${third_party.alipay.callback_url}
  sign-type: ${third_party.alipay.sign_type}
